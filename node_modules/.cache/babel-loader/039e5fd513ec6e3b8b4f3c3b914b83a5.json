{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'PaySuccess',\n\n  beforeRouteEnter(to, from, next) {\n    //在渲染该组件的对应路由被确认前调用\n    // 不能用this获取组件实例（因为调用前还没跳转到该组件）\n    if (from.path == '/pay') {\n      next();\n    } else {\n      next(false);\n    }\n  } // beforeRouteUpdate(to, from) {\n  //   // 在当前【路由改变，但是该组件被复用时】调用(跳转的仍是本路由，只是参数不一样)\n  //   // 举例来说，对于一个带有动态参数的路径 `/users/:id`，在 `/users/1` 和 `/users/2` 之间跳转的时候，\n  //   // 由于会渲染同样的 `UserDetails` 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。\n  //   // 因为在这种情况发生的时候，组件已经挂载好了，导航守卫可以访问组件实例 `this`\n  // },\n  // beforeRouteLeave(to, from) {\n  //   // 在【导航离开渲染该组件的对应路由】时调用\n  //   // 与 `beforeRouteUpdate` 一样，它可以访问组件实例 `this`\n  // },\n\n\n};","map":null,"metadata":{},"sourceType":"module"}