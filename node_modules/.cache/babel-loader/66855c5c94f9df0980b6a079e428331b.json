{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport throttle from 'lodash/throttle';\nexport default {\n  name: 'ShopCart',\n  methods: {\n    getData() {\n      this.$store.dispatch('getCartList');\n    },\n\n    handler: throttle(async function (type, distNum, cart) {\n      switch (type) {\n        case 'plus':\n          // 带给服务器的变化量\n          distNum = 1;\n          break;\n\n        case 'minus':\n          // 产品数量大于1，传递-1（大于1才能减）\n          // 产品数量小于等于1，传递0（不减）\n          distNum = cart.skuNum > 1 ? -1 : 0;\n          break;\n\n        case 'change':\n          // 非法数值：汉字，符号，数字0，负数，小数\n          if (isNaN(distNum) || distNum < 1) {\n            distNum = 0;\n          } else {\n            distNum = parseInt(distNum) - cart.skuNum;\n          }\n\n          break;\n      }\n\n      try {\n        // 修改成功\n        await this.$store.dispatch('addOrUpdateShopCart', {\n          skuId: cart.skuId,\n          skuNum: distNum\n        });\n        this.getData();\n      } catch (error) {\n        alert(error.message);\n      }\n    }, 500),\n\n    async deleteCartById(cart) {\n      try {\n        await this.$store.dispatch('deleteCartListBySkuId', cart.skuId);\n        this.getData();\n      } catch (error) {\n        alert(error.message);\n      }\n    },\n\n    async updateChecked(cart, event) {\n      try {\n        // console.log(event.target.isChecked)\n        let isChecked = event.target.checked ? '1' : '0';\n        await this.$store.dispatch('updateCheckedById', {\n          skuId: cart.skuId,\n          isChecked: isChecked\n        });\n        this.getData();\n      } catch (error) {\n        alert(error.message);\n      }\n    },\n\n    async deleteAllCheckedCart() {\n      try {\n        await this.$store.dispatch('deleteAllCheckedCart');\n        this.getData();\n      } catch (error) {\n        alert(error.message);\n      }\n    },\n\n    async updateAllCartChecked(event) {\n      try {\n        let isChecked = event.target.checked ? '1' : '0'; // console.log(checked)\n\n        await this.$store.dispatch('updateAllCartChecked', isChecked);\n        this.getData();\n      } catch (error) {\n        alert(error.message);\n      }\n    }\n\n  },\n\n  mounted() {\n    this.getData();\n  },\n\n  computed: { ...mapGetters(['cartList']),\n\n    cartInfoList() {\n      return this.cartList.cartInfoList || [];\n    },\n\n    totalPrice() {\n      let sum = 0;\n      this.cartInfoList.forEach(item => {\n        if (item.isChecked == '1') {\n          sum += item.skuNum * item.skuPrice;\n        }\n      });\n      return sum;\n    },\n\n    // 判断底部复选框是否勾选\n    isAllChecked() {\n      // every,遍历数组，只要有一个为假就返回false，否则返回true\n      return this.cartInfoList.every(item => item.isChecked == 1);\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}