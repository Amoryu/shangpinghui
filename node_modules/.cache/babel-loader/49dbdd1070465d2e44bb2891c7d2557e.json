{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u524D\\u7AEF\\u653B\\u514B/\\u5C1A\\u7845\\u8C37Vue/\\u9879\\u76EE/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport Vue from 'vue';\nimport VueRouter from 'vue-router'; //引入路由规则\n\nimport routes from '@/router/routes';\nimport store from '@/store'; // 使用插件\n\nVue.use(VueRouter);\nvar originPush = VueRouter.prototype.push;\nvar originReplace = VueRouter.prototype.replace; // 重写push\n\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originPush.call(this, location, resolve, reject);\n  } else {\n    originPush.call(this, location, function () {}, function () {});\n  }\n}; // 重写replace\n\n\nVueRouter.prototype.replace = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originReplace.call(this, location, resolve, reject);\n  } else {\n    originReplace.call(this, location, function () {}, function () {});\n  }\n};\n\nvar router = new VueRouter({\n  routes: routes,\n  // 滚动行为\n  scrollBehavior: function scrollBehavior(to, from, savedPostion) {\n    //返回y=0，代表滚动条在最上方\n    return {\n      y: 0\n    };\n  }\n}); // 全局前置守卫(在路由跳转之前进行判定)\n\nrouter.beforeEach( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(to, from, next) {\n    var token, name, toPath;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // to :将要跳转到的那个路由信息\n            // from: 从哪个路由而来的信息\n            // next(): 全部路由都放行\n            // next(path) :放行到指定路由 \n            // next(false):中断当前导航\n            // next()\n            token = store.state.user.token;\n            name = store.state.user.userInfo.name;\n\n            if (!token) {\n              _context.next = 24;\n              break;\n            }\n\n            if (!(to.path == '/login')) {\n              _context.next = 7;\n              break;\n            }\n\n            // 则跳转到首页\n            next('/home');\n            _context.next = 22;\n            break;\n\n          case 7:\n            if (!name) {\n              _context.next = 11;\n              break;\n            }\n\n            next();\n            _context.next = 22;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.next = 14;\n            return store.dispatch('getUserInfo');\n\n          case 14:\n            next();\n            _context.next = 22;\n            break;\n\n          case 17:\n            _context.prev = 17;\n            _context.t0 = _context[\"catch\"](11);\n            _context.next = 21;\n            return store.dispatch('userLogout');\n\n          case 21:\n            // 跳转到登录页面\n            next('/login');\n\n          case 22:\n            _context.next = 26;\n            break;\n\n          case 24:\n            // 未登录，不能去【支付相关页面】，【个人中心】\n            // 可以去  ，【首页】【搜索】【购物车】\n            toPath = to.path;\n\n            if (toPath.indexOf('/pay') != -1 || toPath.indexOf('/center') != -1 || toPath.indexOf('/trade') != -1) {\n              // 把未登录时准备去的页面路由，存储在路径中\n              next('/login?redirect=' + toPath);\n            } else {\n              next();\n            }\n\n          case 26:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[11, 17]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\nexport default router;","map":null,"metadata":{},"sourceType":"module"}