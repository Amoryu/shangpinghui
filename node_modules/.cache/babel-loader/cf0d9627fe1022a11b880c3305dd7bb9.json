{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u524D\\u7AEF\\u653B\\u514B/\\u5C1A\\u7845\\u8C37Vue/\\u9879\\u76EE/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { reqAddOrUpdateShopCart, reqGoodsInfo } from \"@/api\";\nvar state = {\n  goodInfo: {}\n};\nvar mutations = {\n  GETGOODINFO: function GETGOODINFO(state, goodInfo) {\n    state.goodInfo = goodInfo;\n  }\n};\nvar actions = {\n  getGoodInfo: function getGoodInfo(_ref, skuId) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGoodsInfo(skuId);\n\n            case 3:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                commit('GETGOODINFO', result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  addOrUpdateShopCart: function addOrUpdateShopCart(_ref2, _ref3) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, skuId, skuNum, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              skuId = _ref3.skuId, skuNum = _ref3.skuNum;\n              _context2.next = 4;\n              return reqAddOrUpdateShopCart(skuId, skuNum);\n\n            case 4:\n              result = _context2.sent;\n              // 服务器写入数据成功，不需要返回其他数，只需要返回code==200\n              // 所以不需要往state中存数据\n              console.log(result);\n\n              if (!(result.code == 200)) {\n                _context2.next = 10;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", Promise.resolve('加入购物车成功'));\n\n            case 10:\n              return _context2.abrupt(\"return\", Promise.reject(new Error('加入购物车失败')));\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  }\n};\nvar getters = {\n  categoryView: function categoryView(state) {\n    // goodInfo可能是空对象，导致categoryView为undefined\n    return state.goodInfo.categoryView || {};\n  },\n  skuInfo: function skuInfo(state) {\n    // 同上\n    return state.goodInfo.skuInfo || {};\n  },\n  spuSaleAttrList: function spuSaleAttrList(state) {\n    return state.goodInfo.spuSaleAttrList || [];\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":{"version":3,"names":["reqAddOrUpdateShopCart","reqGoodsInfo","state","goodInfo","mutations","GETGOODINFO","actions","getGoodInfo","skuId","commit","result","code","data","addOrUpdateShopCart","skuNum","console","log","Promise","resolve","reject","Error","getters","categoryView","skuInfo","spuSaleAttrList"],"sources":["D:/前端攻克/尚硅谷Vue/项目/app/src/store/detail/index.js"],"sourcesContent":["import { reqAddOrUpdateShopCart, reqGoodsInfo } from \"@/api\"\r\nconst state = {\r\n  goodInfo: {}\r\n}\r\nconst mutations = {\r\n  GETGOODINFO(state, goodInfo) {\r\n    state.goodInfo = goodInfo\r\n\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  async getGoodInfo({ commit }, skuId) {\r\n    let result = await reqGoodsInfo(skuId)\r\n    if (result.code == 200) {\r\n      commit('GETGOODINFO', result.data)\r\n    }\r\n  },\r\n  async addOrUpdateShopCart({ commit }, { skuId, skuNum }) {\r\n    let result = await reqAddOrUpdateShopCart(skuId, skuNum)\r\n    // 服务器写入数据成功，不需要返回其他数，只需要返回code==200\r\n    // 所以不需要往state中存数据\r\n    console.log(result);\r\n    if (result.code == 200) {\r\n      return Promise.resolve('加入购物车成功');\r\n    } else {\r\n      return Promise.reject(new Error('加入购物车失败'))\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\nconst getters = {\r\n  categoryView(state) {\r\n    // goodInfo可能是空对象，导致categoryView为undefined\r\n    return state.goodInfo.categoryView || {};\r\n  },\r\n  skuInfo(state) {\r\n    // 同上\r\n    return state.goodInfo.skuInfo || {}\r\n  },\r\n  spuSaleAttrList(state) {\r\n    return state.goodInfo.spuSaleAttrList || []\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default {\r\n  state, mutations, actions, getters\r\n}"],"mappings":";;;;AAAA,SAASA,sBAAT,EAAiCC,YAAjC,QAAqD,OAArD;AACA,IAAMC,KAAK,GAAG;EACZC,QAAQ,EAAE;AADE,CAAd;AAGA,IAAMC,SAAS,GAAG;EAChBC,WADgB,uBACJH,KADI,EACGC,QADH,EACa;IAC3BD,KAAK,CAACC,QAAN,GAAiBA,QAAjB;EAED;AAJe,CAAlB;AAOA,IAAMG,OAAO,GAAG;EACRC,WADQ,6BACgBC,KADhB,EACuB;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAjBC,MAAiB,QAAjBA,MAAiB;cAAA;cAAA,OAChBR,YAAY,CAACO,KAAD,CADI;;YAAA;cAC/BE,MAD+B;;cAEnC,IAAIA,MAAM,CAACC,IAAP,IAAe,GAAnB,EAAwB;gBACtBF,MAAM,CAAC,aAAD,EAAgBC,MAAM,CAACE,IAAvB,CAAN;cACD;;YAJkC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAKpC,CANa;EAORC,mBAPQ,6CAO2C;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAA7BJ,MAA6B,SAA7BA,MAA6B;cAAjBD,KAAiB,SAAjBA,KAAiB,EAAVM,MAAU,SAAVA,MAAU;cAAA;cAAA,OACpCd,sBAAsB,CAACQ,KAAD,EAAQM,MAAR,CADc;;YAAA;cACnDJ,MADmD;cAEvD;cACA;cACAK,OAAO,CAACC,GAAR,CAAYN,MAAZ;;cAJuD,MAKnDA,MAAM,CAACC,IAAP,IAAe,GALoC;gBAAA;gBAAA;cAAA;;cAAA,kCAM9CM,OAAO,CAACC,OAAR,CAAgB,SAAhB,CAN8C;;YAAA;cAAA,kCAQ9CD,OAAO,CAACE,MAAR,CAAe,IAAIC,KAAJ,CAAU,SAAV,CAAf,CAR8C;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAWxD;AAlBa,CAAhB;AAsBA,IAAMC,OAAO,GAAG;EACdC,YADc,wBACDpB,KADC,EACM;IAClB;IACA,OAAOA,KAAK,CAACC,QAAN,CAAemB,YAAf,IAA+B,EAAtC;EACD,CAJa;EAKdC,OALc,mBAKNrB,KALM,EAKC;IACb;IACA,OAAOA,KAAK,CAACC,QAAN,CAAeoB,OAAf,IAA0B,EAAjC;EACD,CARa;EASdC,eATc,2BASEtB,KATF,EASS;IACrB,OAAOA,KAAK,CAACC,QAAN,CAAeqB,eAAf,IAAkC,EAAzC;EACD;AAXa,CAAhB;AAgBA,eAAe;EACbtB,KAAK,EAALA,KADa;EACNE,SAAS,EAATA,SADM;EACKE,OAAO,EAAPA,OADL;EACce,OAAO,EAAPA;AADd,CAAf"},"metadata":{},"sourceType":"module"}