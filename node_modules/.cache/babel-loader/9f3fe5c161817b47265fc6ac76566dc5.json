{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router'; //引入路由规则\n\nimport routes from '@/router/routes';\nimport store from '@/store'; // 使用插件\n\nVue.use(VueRouter);\nlet originPush = VueRouter.prototype.push;\nlet originReplace = VueRouter.prototype.replace; // 重写push\n\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originPush.call(this, location, resolve, reject);\n  } else {\n    originPush.call(this, location, () => {}, () => {});\n  }\n}; // 重写replace\n\n\nVueRouter.prototype.replace = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originReplace.call(this, location, resolve, reject);\n  } else {\n    originReplace.call(this, location, () => {}, () => {});\n  }\n};\n\nconst router = new VueRouter({\n  routes,\n\n  // 滚动行为\n  scrollBehavior(to, from, savedPostion) {\n    //返回y=0，代表滚动条在最上方\n    return {\n      y: 0\n    };\n  }\n\n}); // 全局前置守卫(在路由跳转之前进行判定)\n\nrouter.beforeEach(async (to, from, next) => {\n  // to :将要跳转到的那个路由信息\n  // from: 从哪个路由而来的信息\n  // next(): 全部路由都放行\n  // next(path) :放行到指定路由 \n  // next(false):中断当前导航\n  // next()\n  let token = store.state.user.token;\n  let name = store.state.user.userInfo.name;\n\n  if (token) {\n    // 登录了,想跳转到登录页面\n    if (to.path == '/login') {\n      // 则跳转到首页\n      next('/home');\n    } else {\n      // 登录了,跳转到其他页面\n      // 有用户信息\n      if (name) {\n        next();\n      } else {\n        // 登录了,但当前页面没有用户信息,\n        // 派发actions获取用户信息后再跳转\n        try {\n          await store.dispatch('getUserInfo');\n          next();\n        } catch (error) {\n          // token失效了,获取不到用户信息,重新登录\n          // 清除用户信息\n          await store.dispatch('userLogout'); // 跳转到登录页面\n\n          next('/login');\n        }\n      }\n    }\n  } else {\n    // 未登录，不能去【支付相关页面】，【个人中心】\n    // 可以去  ，【首页】【搜索】【购物车】\n    let toPath = to.path;\n\n    if (toPath.indexOf('/pay') != -1 || toPath.indexOf('/center') != -1 || toPath.indexOf('/trade') != -1) {\n      // 把未登录时准备去的页面路由，存储在路径中\n      next('/login?redirect=' + toPath);\n    } else {\n      next();\n    }\n  }\n});\nexport default router;","map":null,"metadata":{},"sourceType":"module"}