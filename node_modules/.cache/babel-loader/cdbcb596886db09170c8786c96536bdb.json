{"ast":null,"code":"import _objectSpread from \"D:/\\u524D\\u7AEF\\u653B\\u514B/\\u5C1A\\u7845\\u8C37Vue/\\u9879\\u76EE/app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.string.split.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SearchSelector from './SearchSelector/SearchSelector.vue';\nimport { mapGetters, mapState } from 'vuex';\nimport search from '@/store/search';\nexport default {\n  props: ['keyword', 'big'],\n  components: {\n    SearchSelector: SearchSelector\n  },\n  data: function data() {\n    return {\n      searchParams: {\n        // 一级分类id\n        category1Id: '',\n        // 二级分类id\n        category2Id: '',\n        // 三级分类id\n        category3Id: '',\n        // 分类名称\n        categoryName: '',\n        // 搜索关键字\n        keyword: '',\n        // 排序,初始值为综合1,降序desc\n        order: '2:desc',\n        // 分页器\n        pageNo: 1,\n        // 每页展示的数据量\n        pageSize: 10,\n        // 售卖的产品属性\n        props: [],\n        // 品牌\n        trademark: ''\n      }\n    };\n  },\n  beforeMount: function beforeMount() {\n    // 把query和params参数合并到searchParams参数中\n    // 再发送请求之前，整理好要发送给服务器的参数\n    Object.assign(this.searchParams, this.$route.query, this.$route.params);\n  },\n  mounted: function mounted() {\n    this.getData();\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters(['goodsList', 'attrsList', 'trademarkList'])), {}, {\n    isOne: function isOne() {\n      return this.searchParams.order.indexOf('1') != -1;\n    },\n    isTwo: function isTwo() {\n      return this.searchParams.order.indexOf('2') != -1;\n    },\n    isAsc: function isAsc() {\n      return this.searchParams.order.indexOf('asc') != -1;\n    },\n    isDesc: function isDesc() {\n      return this.searchParams.order.indexOf('desc') != -1;\n    }\n  }, mapState({\n    total: function total(state) {\n      return state.search.searchList.total;\n    }\n  })),\n  methods: {\n    // 把这次请求封装成一个函数，调用此函数发送请求\n    getData: function getData() {\n      this.$store.dispatch('getSearchList', this.searchParams);\n    },\n    // 删除分类的名称(不删除搜索框的内容，即params参数)\n    removeCategoryName: function removeCategoryName() {\n      this.searchParams.categoryName = undefined;\n      this.searchParams.category1Id = undefined;\n      this.searchParams.category2Id = undefined;\n      this.searchParams.category3Id = undefined; // 还需再发一次请求\n\n      this.getData(); // 清空地址栏的query参数\n\n      if (this.$route.params) this.$router.push({\n        name: 'search',\n        params: this.$route.params\n      });\n    },\n    removeKeyword: function removeKeyword() {\n      this.searchParams.keyword = undefined;\n      this.getData();\n      this.$bus.$emit('clear');\n\n      if (this.$route.query) {\n        this.$router.push({\n          name: 'search',\n          query: this.$route.query\n        });\n      }\n    },\n    trademarkInfo: function trademarkInfo(trademark) {\n      // console.log('我收到了', trademark)\n      this.searchParams.trademark = \"\".concat(trademark.tmId, \":\").concat(trademark.tmName);\n      this.getData();\n    },\n    removeTrademark: function removeTrademark() {\n      this.searchParams.trademark = undefined;\n      this.getData();\n    },\n    // 收集平台售卖属性的回调\n    attrInfo: function attrInfo(attr, attrValue) {\n      var prop = \"\".concat(attr.attrId, \":\").concat(attrValue, \":\").concat(attr.attrName);\n\n      if (this.searchParams.props.indexOf(prop) === -1) {\n        this.searchParams.props.push(prop);\n      }\n    },\n    // 去掉售卖属性的面包屑并重发请求\n    removeAttr: function removeAttr(index) {\n      this.searchParams.props.splice(index, 1);\n      this.getData();\n    },\n    // 升降序\n    // flag：区分综合和价格 1为综合，2为价格\n    changeOrder: function changeOrder(flag) {\n      var originOrder = this.searchParams.order;\n      var originFlag = originOrder.split(':')[0]; // originSort: 升序还是降序\n\n      var originSort = originOrder.split(':')[1];\n      var newOrder = '';\n\n      if (flag == originFlag) {\n        newOrder = \"\".concat(originFlag, \":\").concat(originSort == 'desc' ? 'asc' : 'desc');\n      } else {\n        newOrder = \"\".concat(flag, \":\", 'desc');\n      }\n\n      this.searchParams.order = newOrder;\n      this.getData();\n    },\n    getCurrentPage: function getCurrentPage(pageNo) {\n      console.log(pageNo);\n      this.searchParams.pageNo = pageNo;\n      this.getData();\n    }\n  },\n  watch: {\n    // 监听路由信息发生变化，如果变化，再次发送请求\n    $route: function $route(newValue, oldValue) {\n      // console.log(newValue, oldValue)\n      // 再次发请求前，需要整理参数\n      Object.assign(this.searchParams, this.$route.query, this.$route.params); // console.log(this.searchParams)\n\n      this.getData(); // 每一次请求完毕，把相应的1，2，3级分类的id置空，接收下一次请求的相应参数\n\n      this.searchParams.category1Id = undefined;\n      this.searchParams.category2Id = undefined;\n      this.searchParams.category3Id = undefined;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}