{"ast":null,"code":"import _objectSpread from \"D:/\\u524D\\u7AEF\\u653B\\u514B/\\u5C1A\\u7845\\u8C37Vue/\\u9879\\u76EE/app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex'; // 按需引入节流模块(默认导出,不需要加花括号)\n\nimport throttle from 'lodash/throttle';\nexport default {\n  name: 'TypeNav',\n  // 组件挂在完毕,向服务器发请求\n  data: function data() {\n    return {\n      currentIndex: -1,\n      show: true\n    };\n  },\n  methods: {\n    // 为鼠标进入事件设置节流,throttle函数别用箭头寒素,可能出现this问题\n    changeIndex: throttle(function (index) {\n      // 鼠标移上某个一级分类的index\n      // 正常情况:操作很慢,鼠标进入每一个一级分类,都会触发鼠标进入事件\n      // 异常情况 :操作很快,鼠标进入每一个一级分类,但只有部分触发\n      // 浏览器反应不过来,当前回调有一些大量业务,就会出现卡顿现象\n      // console.log(index)\n      this.currentIndex = index;\n    }, 50),\n    leaveShow: function leaveShow() {\n      this.currentIndex = -1;\n\n      if (this.$route.path != '/home') {\n        this.show = false;\n      }\n    },\n    goSearch: function goSearch(event) {\n      // 编程式导航 + 事件委派\n      // 存在问题,事件委派,把全部子系欸但的事件委派给父节点,如何确定点击的是a标签\n      //  如何确定点击的是几级导航\n      var element = event.target; // 自定义属性时大写,但在dataset中是小写,所以引入是要去掉驼峰\n\n      var _element$dataset = element.dataset,\n          categoryname = _element$dataset.categoryname,\n          category1id = _element$dataset.category1id,\n          category2id = _element$dataset.category2id,\n          category3id = _element$dataset.category3id;\n\n      if (categoryname) {\n        // 整理路由跳转的参数\n        // 要跳转的路由名称\n        var location = {\n          name: 'search'\n        }; // 选中的产品名称\n\n        var query = {\n          categoryName: categoryname\n        };\n\n        if (category1id) {\n          query.category1Id = category1id;\n        } else if (category2id) {\n          query.category2Id = category2id;\n        } else {\n          query.category3Id = category3id;\n        }\n\n        if (this.$route.params) {\n          location.params = this.$route.params;\n          location.query = query; // console.log(location)\n        }\n\n        this.$router.push(location); // 最终实现的结果是\n        // this.$router.push({name:'search,query:{categoryName:categoryName,category某Id:category某Id}})\n      }\n    },\n    enterShow: function enterShow() {\n      if (this.$route.path != '/home') {\n        this.show = true;\n      }\n    }\n  },\n  mounted: function mounted() {\n    // 每次跳转都要发一次数据请求,效率不高,影响性能,所以将请求放到App根组件中,只发送一次\n    // this.$store.dispatch('categoryList')\n    if (this.$route.path != '/home') {\n      this.show = false;\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    // 右侧需要一个函数,当使用这个计算属性时,就会调用这个函数\n    categoryList: function categoryList(state) {\n      // console.log(state)\n      return state.home.categoryList;\n    }\n  }))\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmFA,gC,CACA;;AACA;AAEA;EACAA,eADA;EAEA;EACAC,IAHA,kBAGA;IACA;MACAC,gBADA;MAEAC;IAFA;EAIA,CARA;EASAC;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;MACA;IACA,CAPA,EAOA,EAPA,CAFA;IAUAC,SAVA,uBAUA;MACA;;MACA;QACA;MACA;IACA,CAfA;IAgBAC,QAhBA,oBAgBAC,KAhBA,EAgBA;MACA;MACA;MACA;MAEA,2BALA,CAMA;;MACA,uBACAC,eADA;MAAA;MAAA;MAAA;MAAA;;MAGA;QACA;QACA;QACA;UAAAT;QAAA,EAHA,CAIA;;QACA;UAAAU;QAAA;;QAEA;UACAC;QACA,CAFA,MAEA;UACAA;QACA,CAFA,MAEA;UACAA;QACA;;QACA;UACAC;UACAA,uBAFA,CAGA;QACA;;QAEA,4BApBA,CAqBA;QACA;MACA;IACA,CAlDA;IAmDAC,SAnDA,uBAmDA;MACA;QACA;MACA;IACA;EAvDA,CATA;EAkEAC,OAlEA,qBAkEA;IACA;IACA;IACA;MACA;IACA;EACA,CAxEA;EAyEAC,4BACAC;IACA;IACAC;MACA;MACA;IACA;EALA,EADA;AAzEA","names":["name","data","currentIndex","show","methods","changeIndex","leaveShow","goSearch","event","element","categoryName","query","location","enterShow","mounted","computed","mapState","categoryList"],"sourceRoot":"src/components/TypeNav","sources":["index.vue"],"sourcesContent":["<template>\r\n  <!-- 商品分类导航 -->\r\n  <div class=\"type-nav\">\r\n    <!-- <h1>{{ categoryList }}</h1> -->\r\n    <div class=\"container\">\r\n      <div @mouseleave=\"leaveShow\" @mouseenter=\"enterShow\">\r\n        <h2 class=\"all\">全部商品分类</h2>\r\n        <!-- 过渡动画 -->\r\n        <transition name=\"sort\">\r\n          <div class=\"sort\" v-show=\"show\">\r\n            <div class=\"all-sort-list2\" @click=\"goSearch\">\r\n              <div\r\n                class=\"item\"\r\n                v-for=\"(c1, index) in categoryList\"\r\n                :key=\"c1.categoryId\"\r\n                :class=\"{ cur: currentIndex == index }\"\r\n              >\r\n                <h3 @mouseenter=\"changeIndex(index)\">\r\n                  <a\r\n                    :data-categoryName=\"c1.categoryName\"\r\n                    :data-category1Id=\"c1.categoryId\"\r\n                    >{{ c1.categoryName }}</a\r\n                  >\r\n                  <!-- <router-link to=\"/search\">{{ c1.categoryName }}</router-link> -->\r\n                </h3>\r\n                <div\r\n                  class=\"item-list clearfix\"\r\n                  :style=\"{ display: currentIndex == index ? 'block' : 'none' }\"\r\n                >\r\n                  <div\r\n                    class=\"subitem\"\r\n                    v-for=\"(c2, index) in c1.categoryChild\"\r\n                    :key=\"c2.categoryId\"\r\n                  >\r\n                    <dl class=\"fore\">\r\n                      <dt>\r\n                        <a\r\n                          :data-categoryName=\"c2.categoryName\"\r\n                          :data-category2Id=\"c2.categoryId\"\r\n                          >{{ c2.categoryName }}</a\r\n                        >\r\n                        <!-- <router-link to=\"/search\"\r\n                        >{{ c2.categoryName }}\r\n                      </router-link> -->\r\n                      </dt>\r\n                      <dd>\r\n                        <em\r\n                          v-for=\"(c3, index) in c2.categoryChild\"\r\n                          :key=\"c3.categoryId\"\r\n                        >\r\n                          <a\r\n                            :data-categoryName=\"c3.categoryName\"\r\n                            :data-category3Id=\"c3.categoryId\"\r\n                            >{{ c3.categoryName }}</a\r\n                          >\r\n                          <!-- <router-link to=\"/search\">{{\r\n                          c3.categoryName\r\n                        }}</router-link> -->\r\n                        </em>\r\n                      </dd>\r\n                    </dl>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </transition>\r\n      </div>\r\n      <nav class=\"nav\">\r\n        <a href=\"###\">服装城</a>\r\n        <a href=\"###\">美妆馆</a>\r\n        <a href=\"###\">尚品汇超市</a>\r\n        <a href=\"###\">全球购</a>\r\n        <a href=\"###\">闪购</a>\r\n        <a href=\"###\">团购</a>\r\n        <a href=\"###\">有趣</a>\r\n        <a href=\"###\">秒杀</a>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\n// 按需引入节流模块(默认导出,不需要加花括号)\r\nimport throttle from 'lodash/throttle'\r\n\r\nexport default {\r\n  name: 'TypeNav',\r\n  // 组件挂在完毕,向服务器发请求\r\n  data() {\r\n    return {\r\n      currentIndex: -1,\r\n      show: true,\r\n    }\r\n  },\r\n  methods: {\r\n    // 为鼠标进入事件设置节流,throttle函数别用箭头寒素,可能出现this问题\r\n    changeIndex: throttle(function (index) {\r\n      // 鼠标移上某个一级分类的index\r\n      // 正常情况:操作很慢,鼠标进入每一个一级分类,都会触发鼠标进入事件\r\n      // 异常情况 :操作很快,鼠标进入每一个一级分类,但只有部分触发\r\n      // 浏览器反应不过来,当前回调有一些大量业务,就会出现卡顿现象\r\n      // console.log(index)\r\n      this.currentIndex = index\r\n    }, 50),\r\n    leaveShow() {\r\n      this.currentIndex = -1\r\n      if (this.$route.path != '/home') {\r\n        this.show = false\r\n      }\r\n    },\r\n    goSearch(event) {\r\n      // 编程式导航 + 事件委派\r\n      // 存在问题,事件委派,把全部子系欸但的事件委派给父节点,如何确定点击的是a标签\r\n      //  如何确定点击的是几级导航\r\n\r\n      let element = event.target\r\n      // 自定义属性时大写,但在dataset中是小写,所以引入是要去掉驼峰\r\n      let { categoryname, category1id, category2id, category3id } =\r\n        element.dataset\r\n\r\n      if (categoryname) {\r\n        // 整理路由跳转的参数\r\n        // 要跳转的路由名称\r\n        let location = { name: 'search' }\r\n        // 选中的产品名称\r\n        let query = { categoryName: categoryname }\r\n\r\n        if (category1id) {\r\n          query.category1Id = category1id\r\n        } else if (category2id) {\r\n          query.category2Id = category2id\r\n        } else {\r\n          query.category3Id = category3id\r\n        }\r\n        if (this.$route.params) {\r\n          location.params = this.$route.params\r\n          location.query = query\r\n          // console.log(location)\r\n        }\r\n\r\n        this.$router.push(location)\r\n        // 最终实现的结果是\r\n        // this.$router.push({name:'search,query:{categoryName:categoryName,category某Id:category某Id}})\r\n      }\r\n    },\r\n    enterShow() {\r\n      if (this.$route.path != '/home') {\r\n        this.show = true\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // 每次跳转都要发一次数据请求,效率不高,影响性能,所以将请求放到App根组件中,只发送一次\r\n    // this.$store.dispatch('categoryList')\r\n    if (this.$route.path != '/home') {\r\n      this.show = false\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      // 右侧需要一个函数,当使用这个计算属性时,就会调用这个函数\r\n      categoryList: (state) => {\r\n        // console.log(state)\r\n        return state.home.categoryList\r\n      },\r\n    }),\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.type-nav {\r\n  border-bottom: 2px solid #e1251b;\r\n\r\n  .container {\r\n    width: 1200px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    position: relative;\r\n\r\n    .all {\r\n      width: 210px;\r\n      height: 45px;\r\n      background-color: #e1251b;\r\n      line-height: 45px;\r\n      text-align: center;\r\n      color: #fff;\r\n      font-size: 14px;\r\n      font-weight: bold;\r\n    }\r\n\r\n    .nav {\r\n      a {\r\n        height: 45px;\r\n        margin: 0 22px;\r\n        line-height: 45px;\r\n        font-size: 16px;\r\n        color: #333;\r\n      }\r\n    }\r\n\r\n    .sort {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 45px;\r\n      width: 210px;\r\n      height: 461px;\r\n      position: absolute;\r\n      background: #fafafa;\r\n      z-index: 999;\r\n\r\n      .all-sort-list2 {\r\n        .item {\r\n          h3 {\r\n            line-height: 30px;\r\n            font-size: 14px;\r\n            font-weight: 400;\r\n            overflow: hidden;\r\n            padding: 0 20px;\r\n            margin: 0;\r\n\r\n            a {\r\n              color: #333;\r\n            }\r\n          }\r\n\r\n          .item-list {\r\n            display: none;\r\n            position: absolute;\r\n            width: 734px;\r\n            min-height: 460px;\r\n            background: #f7f7f7;\r\n            left: 210px;\r\n            border: 1px solid #ddd;\r\n            top: 0;\r\n            z-index: 9999 !important;\r\n\r\n            .subitem {\r\n              float: left;\r\n              width: 650px;\r\n              padding: 0 4px 0 8px;\r\n\r\n              dl {\r\n                border-top: 1px solid #eee;\r\n                padding: 6px 0;\r\n                overflow: hidden;\r\n                zoom: 1;\r\n\r\n                &.fore {\r\n                  border-top: 0;\r\n                }\r\n\r\n                dt {\r\n                  float: left;\r\n                  width: 54px;\r\n                  line-height: 22px;\r\n                  text-align: right;\r\n                  padding: 3px 6px 0 0;\r\n                  font-weight: 700;\r\n                }\r\n\r\n                dd {\r\n                  float: left;\r\n                  width: 415px;\r\n                  padding: 3px 0 0;\r\n                  overflow: hidden;\r\n\r\n                  em {\r\n                    float: left;\r\n                    height: 14px;\r\n                    line-height: 14px;\r\n                    padding: 0 8px;\r\n                    margin-top: 5px;\r\n                    border-left: 1px solid #ccc;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        .cur {\r\n          background: skyblue;\r\n        }\r\n      }\r\n    }\r\n    // 过渡动画的样式\r\n    // 过渡动画的开始装填\r\n    .sort-enter {\r\n      height: 0px;\r\n      // transform: rotate(0deg);\r\n    }\r\n    // 过渡动画的结束状态\r\n    .sort-enter-to {\r\n      height: 461px;\r\n    }\r\n    // 定义动画的时间,速率\r\n    .sort-enter-active {\r\n      transition: all 0.3s linear;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}