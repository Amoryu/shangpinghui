{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u524D\\u7AEF\\u653B\\u514B/\\u5C1A\\u7845\\u8C37Vue/\\u9879\\u76EE/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport { reqCartList, reqDeleteCartById, reqUpdateCheckedById } from \"@/api\"; // 封装游客身份模块  \n// import { getUUID } from '@/utils/uuid_token.js'\n\nvar state = {\n  cartList: []\n};\nvar mutations = {\n  GETCARTLIST: function GETCARTLIST(state, cartList) {\n    state.cartList = cartList;\n  }\n};\nvar actions = {\n  // 获取购物车列表的数据\n  getCartList: function getCartList(_ref) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqCartList();\n\n            case 3:\n              result = _context.sent;\n\n              //  测试是否能获取数据\n              if (result.code == 200) {\n                commit('GETCARTLIST', result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  // 删除购物车某个产品\n  deleteCartListBySkuId: function deleteCartListBySkuId(_ref2, skuId) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqDeleteCartById(skuId);\n\n            case 3:\n              result = _context2.sent;\n\n              if (!(result.code == 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", Promise.resolve('删除成功'));\n\n            case 8:\n              return _context2.abrupt(\"return\", Promise.reject(new Error('删除失败')));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  updateCheckedById: function updateCheckedById(_ref3, _ref4) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var commit, skuId, isChecked, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              skuId = _ref4.skuId, isChecked = _ref4.isChecked;\n              _context3.next = 4;\n              return reqUpdateCheckedById(skuId, isChecked);\n\n            case 4:\n              result = _context3.sent;\n\n              if (!(result.code == 200)) {\n                _context3.next = 9;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", Promise.resolve('修改成功'));\n\n            case 9:\n              return _context3.abrupt(\"return\", Promise.reject(new Error('修改失败')));\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  // {dispatch，getters}是对context的解构赋值\n  deleteAllCheckedCart: function deleteAllCheckedCart(_ref5) {\n    var dispatch = _ref5.dispatch,\n        getters = _ref5.getters;\n    var PromiseAll = [];\n    getters.cartList.cartInfoList.forEach(function (item) {\n      var promise = item.isChecked == 1 ? dispatch('deleteCartListBySkuId', item.skuId) : '';\n      PromiseAll.push(promise); // console.log(result);\n    });\n    return Promise.all(PromiseAll);\n  },\n  updateAllCartChecked: function updateAllCartChecked(_ref6, isChecked) {\n    var dispatch = _ref6.dispatch,\n        state = _ref6.state;\n    var promiseAll = [];\n    state.cartList[0].cartInfoList.forEach(function (item) {\n      var p = dispatch('updateCheckedById', {\n        skuId: item.skuId,\n        isChecked: isChecked\n      });\n      promiseAll.push(p);\n    });\n    return Promise.all(promiseAll);\n  }\n};\nvar getters = {\n  cartList: function cartList() {\n    return state.cartList[0] || {};\n  }\n};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};","map":null,"metadata":{},"sourceType":"module"}