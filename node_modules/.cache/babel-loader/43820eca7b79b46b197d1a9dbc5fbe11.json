{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { reqGetCode, reqLogout, reqUserInfo, reqUserLogin, reqUserRegister } from \"@/api\";\nimport { setToken, getToken, removeToken } from '@/utils/token.js';\nconst state = {\n  code: '',\n  token: getToken('TOKEN'),\n  userInfo: {}\n};\nconst mutations = {\n  GETCODE(state, code) {\n    state.code = code;\n  },\n\n  USERLOGIN(state, token) {\n    state.token = token;\n  },\n\n  GETUSERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n\n  CLEAR(state) {\n    // 仓库中用户信息清空\n    state.token = '';\n    state.userInfo = {}; // 本地存储数据清空\n\n    removeToken();\n  }\n\n};\nconst actions = {\n  // 获取验证码\n  async getCode({\n    commit\n  }, phone) {\n    // 把验证码返回，正常情况应该是把验证码发到用户手机上\n    let result = await reqGetCode(phone); // console.log(result);\n\n    if (result.code == 200) {\n      commit('GETCODE', result.data);\n      return Promise.resolve('发送验证码成功');\n    } else {\n      return Promise.reject(new Error('获取验证码失败'));\n    }\n  },\n\n  // 用户注册\n  async userRegister({\n    commit\n  }, user) {\n    let result = await reqUserRegister(user);\n    console.log(result);\n  },\n\n  // 用户登录【token】\n  async userLogin({\n    commit\n  }, data) {\n    let result = await reqUserLogin(data);\n\n    if (result.code == 200) {\n      commit('USERLOGIN', result.data.token);\n      setToken(result.data.token);\n      return Promise.resolve('登录成功');\n    } else {\n      return Promise.reject('登录失败');\n    }\n  },\n\n  // 获取用户信息\n  async getUserInfo({\n    commit\n  }) {\n    let result = await reqUserInfo();\n\n    if (result.code == 200) {\n      commit('GETUSERINFO', result.data);\n      return Promise.resolve('获取用户信息成功');\n    } else {\n      return Promise.reject(new Error('获取用户信息失败'));\n    }\n  },\n\n  // 退出登录\n  async userLogout({\n    commit\n  }) {\n    // 只是向服务器发起请求，通知服务器清除token\n    let result = await reqLogout();\n\n    if (result.code == 200) {\n      commit('CLEAR');\n      return Promise.resolve('退出登录成功');\n    } else {\n      return Promise.reject(new Error('退出登录失败'));\n    }\n  }\n\n};\nconst getters = {};\nexport default {\n  state,\n  mutations,\n  actions,\n  getters\n};","map":null,"metadata":{},"sourceType":"module"}