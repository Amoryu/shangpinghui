{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.error.cause.js\";\n// axios二次封装,因为要用到请求和响应拦截器\nimport axios from 'axios';\nvar request = axios.create({\n  // 配置对象\n  // 基础路径,发送请求时,路径中会出现api\n  baseURL: '/api',\n  // 请求超时时间\n  timeout: 5000\n}); // 请求拦截器\n\nrequest.interceptors.request.use(function (config) {\n  // config是一个配置对象,包含一个headers属性\n  return config;\n}); // 响应拦截器\n\nrequest.interceptors.response.use(function (res) {\n  // 响应成功的回调函数\n  return res.data;\n}, function (error) {\n  // 响应失败的回调函数\n  return Promise.reject(new Error('fail'));\n}); // 对外暴露request\n\nexport default request;","map":{"version":3,"names":["axios","request","create","baseURL","timeout","interceptors","use","config","response","res","data","error","Promise","reject","Error"],"sources":["D:/前端攻克/尚硅谷Vue/项目/app/src/api/request.js"],"sourcesContent":["// axios二次封装,因为要用到请求和响应拦截器\r\nimport axios from 'axios';\r\nconst request = axios.create({\r\n  // 配置对象\r\n  // 基础路径,发送请求时,路径中会出现api\r\n  baseURL: '/api',\r\n  // 请求超时时间\r\n  timeout: 5000,\r\n\r\n});\r\n// 请求拦截器\r\nrequest.interceptors.request.use((config) => {\r\n  // config是一个配置对象,包含一个headers属性\r\n  return config;\r\n})\r\n// 响应拦截器\r\nrequest.interceptors.response.use((res) => {\r\n  // 响应成功的回调函数\r\n  return res.data;\r\n}, (error) => {\r\n  // 响应失败的回调函数\r\n  return Promise.reject(new Error('fail'))\r\n})\r\n\r\n// 对外暴露request\r\nexport default request"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;EAC3B;EACA;EACAC,OAAO,EAAE,MAHkB;EAI3B;EACAC,OAAO,EAAE;AALkB,CAAb,CAAhB,C,CAQA;;AACAH,OAAO,CAACI,YAAR,CAAqBJ,OAArB,CAA6BK,GAA7B,CAAiC,UAACC,MAAD,EAAY;EAC3C;EACA,OAAOA,MAAP;AACD,CAHD,E,CAIA;;AACAN,OAAO,CAACI,YAAR,CAAqBG,QAArB,CAA8BF,GAA9B,CAAkC,UAACG,GAAD,EAAS;EACzC;EACA,OAAOA,GAAG,CAACC,IAAX;AACD,CAHD,EAGG,UAACC,KAAD,EAAW;EACZ;EACA,OAAOC,OAAO,CAACC,MAAR,CAAe,IAAIC,KAAJ,CAAU,MAAV,CAAf,CAAP;AACD,CAND,E,CAQA;;AACA,eAAeb,OAAf"},"metadata":{},"sourceType":"module"}